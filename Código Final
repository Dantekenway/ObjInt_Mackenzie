#include <WiFi.h>
#include <PubSubClient.h>

// Configurações de Wi-Fi
const char* ssid = "####";     // Substitua pelo nome da sua rede Wi-Fi
const char* password = "####";  // Substitua pela senha da sua rede Wi-Fi

// Configurações MQTT
const char* mqtt_server = "broker.emqx.io";  // URL ou IP do broker MQTT
const int mqtt_port = 1883;                  // Porta MQTT padrão
const char* mqtt_username = "luan";
const char* mqtt_password = "public";
const char* mqtt_topic = "emqx/esp32";  // Tópico onde as mensagens serão publicadas

WiFiClient espClient;
PubSubClient client(espClient);

// Configurações do sensor
const int PINO_TRIG = 14;
const int PINO_ECHO = 25;

void setup() {
  Serial.begin(9600);

  // Configuração Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Conectando ao Wi-Fi...");
  }
  Serial.println("Conectado ao Wi-Fi!");

  // Configuração MQTT  
  client.setServer(mqtt_server, mqtt_port);

  String client_id = "esp32-client-";
  client_id += String(WiFi.macAddress());
  while (!client.connected()) {
    Serial.println("Conectando ao broker MQTT...");
    if (client.connect("ESP32Client")) {
      Serial.println("Conectado ao broker MQTT!");
    } else {
      Serial.print("Falha na conexão. Código de erro: ");
      Serial.println(client.state());
      delay(2000);
    }
  }

  pinMode(PINO_TRIG, OUTPUT);
  pinMode(PINO_ECHO, INPUT);
}

void loop() {
  // Garante a conexão com o broker MQTT
  if (!client.connected()) {
    while (!client.connected()) {
      Serial.println("Reconectando ao broker MQTT...");
      if (client.connect("ESP32Client")) {
        Serial.println("Reconectado ao broker MQTT!");
      } else {
        Serial.print("Falha na reconexão. Código de erro: ");
        Serial.println(client.state());
        delay(2000);
      }
    }
  }

  // Envia pulso ao sensor
  digitalWrite(PINO_TRIG, LOW);
  delayMicroseconds(2);
  digitalWrite(PINO_TRIG, HIGH);
  delayMicroseconds(10);
  digitalWrite(PINO_TRIG, LOW);

  long duracao = pulseIn(PINO_ECHO, HIGH);
  float distancia = (duracao * 0.0343) / 2;

  String mensagem;
  if (distancia >= 7.5) {
    mensagem = "Produto não encontrado. Repor estoque";
  } else {
    mensagem = "Produto disponível.";
  }

  // Publica no tópico MQTT
  if (client.publish(mqtt_topic, mensagem.c_str())) {
    Serial.println("Mensagem publicada com sucesso: " + mensagem);
  } else {
    Serial.println("Falha ao publicar mensagem.");
  }

  delay(5000);  // Aguarda 5 segundos antes da próxima leitura
}
